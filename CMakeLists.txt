CMAKE_MINIMUM_REQUIRED(VERSION 2.8)

#CONFIGURATION DU PROJET EN VERSION ASSISTÃ‰E
IF(CMAKE_BUILD_TYPE)
  SET(CMAKE_BUILD_TYPE ${CMAKE_BUILD_TYPE} CACHE STRING "Choose the type of
 build, options are: None(CMAKE_CXX_FLAGS or CMAKE_C_FLAGS used) Debug
 Release RelWithDebInfo MinSizeRel.")
 ELSE()
    SET(CMAKE_BUILD_TYPE Debug CACHE STRING "Choose the type of build,
 options are: None(CMAKE_CXX_FLAGS or CMAKE_C_FLAGS used) Debug Release
 RelWithDebInfo MinSizeRel.")
 ENDIF()

PROJECT(CLIENT_SERVEUR_UDP)
#file(GLOB_RECURSE SOURCE_FILES src/* )
file(
	GLOB_RECURSE

	source_files

	src/*


)

#RECHERCHE LIBRAIRIE
set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "/usr/share/SFML/cmake/Modules")
FIND_PACKAGE(SFML 2 REQUIRED COMPONENTS network audio system)

#CREATION DE L'EXECUTABLE
ADD_EXECUTABLE(${PROJECT_NAME} ${source_files})


    IF(SFML_FOUND)
    TARGET_LINK_LIBRARIES(${PROJECT_NAME} ${SFML_DEPENDENCIES} ${SFML_LIBRARIES} opus )
    TARGET_INCLUDE_DIRECTORIES(${PROJECT_NAME} PUBLIC ${SFML_INCLUDE_DIR} "/usr/include/opus")


    ELSE()
    MESSAGE(FATAL_ERROR"ERREUR LA LIBRAIRIE N'A PAS ETAIT TROUVE")
    ENDIF()

#CONFIGURATION DE L'EXECUTABLE
TARGET_COMPILE_FEATURES (${PROJECT_NAME} PUBLIC cxx_range_for)
